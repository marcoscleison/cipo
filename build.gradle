/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'eclipse'
  

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral() 
    mavenLocal()
    
     maven {
        url "http://dl.bintray.com/jtwig/maven"
        url "https://mvnrepository.com/artifact/org.slf4j/slf4j-simple"
        url "https://mvnrepository.com/artifact/com.google.inject/guice"
        url "https://mvnrepository.com/artifact/commons-io/commons-io"
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'
    
    compile 'org.codehaus.groovy:groovy-all:2.4.7'
    compile 'org.jtwig:jtwig-web:5.+'
    
    
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'
    
    
    // https://mvnrepository.com/artifact/com.google.inject/guice
compile group: 'com.google.inject', name: 'guice', version: '4.1.0'
    
    
    // https://mvnrepository.com/artifact/commons-io/commons-io
compile group: 'commons-io', name: 'commons-io', version: '2.4'
    
    
    
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

version ='0.0.1'


task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Cipo Code Generator',
        	'Implementation-Version': version,
        	'Main-Class': 'org.cipo.Cipo'
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

